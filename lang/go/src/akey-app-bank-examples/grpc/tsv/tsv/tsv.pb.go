// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tsv.proto

package tsv

import (
	global "akey-app-bank-examples/grpc/global"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type QRRequest struct {
	ProviderName         string   `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QRRequest) Reset()         { *m = QRRequest{} }
func (m *QRRequest) String() string { return proto.CompactTextString(m) }
func (*QRRequest) ProtoMessage()    {}
func (*QRRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{0}
}

func (m *QRRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QRRequest.Unmarshal(m, b)
}
func (m *QRRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QRRequest.Marshal(b, m, deterministic)
}
func (m *QRRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QRRequest.Merge(m, src)
}
func (m *QRRequest) XXX_Size() int {
	return xxx_messageInfo_QRRequest.Size(m)
}
func (m *QRRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QRRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QRRequest proto.InternalMessageInfo

func (m *QRRequest) GetProviderName() string {
	if m != nil {
		return m.ProviderName
	}
	return ""
}

type Provider struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	QrPattern            string   `protobuf:"bytes,3,opt,name=qr_pattern,json=qrPattern,proto3" json:"qr_pattern,omitempty"`
	LogoUrl              string   `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	VerifyApi            string   `protobuf:"bytes,5,opt,name=verify_api,json=verifyApi,proto3" json:"verify_api,omitempty"`
	IsAkey               bool     `protobuf:"varint,6,opt,name=is_akey,json=isAkey,proto3" json:"is_akey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Provider) Reset()         { *m = Provider{} }
func (m *Provider) String() string { return proto.CompactTextString(m) }
func (*Provider) ProtoMessage()    {}
func (*Provider) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{1}
}

func (m *Provider) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Provider.Unmarshal(m, b)
}
func (m *Provider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Provider.Marshal(b, m, deterministic)
}
func (m *Provider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Provider.Merge(m, src)
}
func (m *Provider) XXX_Size() int {
	return xxx_messageInfo_Provider.Size(m)
}
func (m *Provider) XXX_DiscardUnknown() {
	xxx_messageInfo_Provider.DiscardUnknown(m)
}

var xxx_messageInfo_Provider proto.InternalMessageInfo

func (m *Provider) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Provider) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Provider) GetQrPattern() string {
	if m != nil {
		return m.QrPattern
	}
	return ""
}

func (m *Provider) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *Provider) GetVerifyApi() string {
	if m != nil {
		return m.VerifyApi
	}
	return ""
}

func (m *Provider) GetIsAkey() bool {
	if m != nil {
		return m.IsAkey
	}
	return false
}

type KeyRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Label                string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyRequest) Reset()         { *m = KeyRequest{} }
func (m *KeyRequest) String() string { return proto.CompactTextString(m) }
func (*KeyRequest) ProtoMessage()    {}
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{2}
}

func (m *KeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyRequest.Unmarshal(m, b)
}
func (m *KeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyRequest.Marshal(b, m, deterministic)
}
func (m *KeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyRequest.Merge(m, src)
}
func (m *KeyRequest) XXX_Size() int {
	return xxx_messageInfo_KeyRequest.Size(m)
}
func (m *KeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KeyRequest proto.InternalMessageInfo

func (m *KeyRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *KeyRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type KeyResponse struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ProviderName         string   `protobuf:"bytes,2,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	QrUrl                string   `protobuf:"bytes,3,opt,name=qr_url,json=qrUrl,proto3" json:"qr_url,omitempty"`
	Label                string   `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	BindApi              string   `protobuf:"bytes,5,opt,name=bind_api,json=bindApi,proto3" json:"bind_api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyResponse) Reset()         { *m = KeyResponse{} }
func (m *KeyResponse) String() string { return proto.CompactTextString(m) }
func (*KeyResponse) ProtoMessage()    {}
func (*KeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{3}
}

func (m *KeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyResponse.Unmarshal(m, b)
}
func (m *KeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyResponse.Marshal(b, m, deterministic)
}
func (m *KeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyResponse.Merge(m, src)
}
func (m *KeyResponse) XXX_Size() int {
	return xxx_messageInfo_KeyResponse.Size(m)
}
func (m *KeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_KeyResponse proto.InternalMessageInfo

func (m *KeyResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyResponse) GetProviderName() string {
	if m != nil {
		return m.ProviderName
	}
	return ""
}

func (m *KeyResponse) GetQrUrl() string {
	if m != nil {
		return m.QrUrl
	}
	return ""
}

func (m *KeyResponse) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *KeyResponse) GetBindApi() string {
	if m != nil {
		return m.BindApi
	}
	return ""
}

type BindKeyRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ProviderName         string   `protobuf:"bytes,2,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	VerifyCode           string   `protobuf:"bytes,3,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code,omitempty"`
	Label                string   `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty"`
	Platform             string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	DeviceId             string   `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindKeyRequest) Reset()         { *m = BindKeyRequest{} }
func (m *BindKeyRequest) String() string { return proto.CompactTextString(m) }
func (*BindKeyRequest) ProtoMessage()    {}
func (*BindKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{4}
}

func (m *BindKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BindKeyRequest.Unmarshal(m, b)
}
func (m *BindKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BindKeyRequest.Marshal(b, m, deterministic)
}
func (m *BindKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindKeyRequest.Merge(m, src)
}
func (m *BindKeyRequest) XXX_Size() int {
	return xxx_messageInfo_BindKeyRequest.Size(m)
}
func (m *BindKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BindKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BindKeyRequest proto.InternalMessageInfo

func (m *BindKeyRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *BindKeyRequest) GetProviderName() string {
	if m != nil {
		return m.ProviderName
	}
	return ""
}

func (m *BindKeyRequest) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

func (m *BindKeyRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *BindKeyRequest) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *BindKeyRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type TwoStepVerifyStauts struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TwoStepVerifyStauts) Reset()         { *m = TwoStepVerifyStauts{} }
func (m *TwoStepVerifyStauts) String() string { return proto.CompactTextString(m) }
func (*TwoStepVerifyStauts) ProtoMessage()    {}
func (*TwoStepVerifyStauts) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{5}
}

func (m *TwoStepVerifyStauts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TwoStepVerifyStauts.Unmarshal(m, b)
}
func (m *TwoStepVerifyStauts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TwoStepVerifyStauts.Marshal(b, m, deterministic)
}
func (m *TwoStepVerifyStauts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TwoStepVerifyStauts.Merge(m, src)
}
func (m *TwoStepVerifyStauts) XXX_Size() int {
	return xxx_messageInfo_TwoStepVerifyStauts.Size(m)
}
func (m *TwoStepVerifyStauts) XXX_DiscardUnknown() {
	xxx_messageInfo_TwoStepVerifyStauts.DiscardUnknown(m)
}

var xxx_messageInfo_TwoStepVerifyStauts proto.InternalMessageInfo

func (m *TwoStepVerifyStauts) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *TwoStepVerifyStauts) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type VerifyCodeRequest struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Label                string   `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyCodeRequest) Reset()         { *m = VerifyCodeRequest{} }
func (m *VerifyCodeRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyCodeRequest) ProtoMessage()    {}
func (*VerifyCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d8317bf0c59a0f59, []int{6}
}

func (m *VerifyCodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyCodeRequest.Unmarshal(m, b)
}
func (m *VerifyCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyCodeRequest.Marshal(b, m, deterministic)
}
func (m *VerifyCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyCodeRequest.Merge(m, src)
}
func (m *VerifyCodeRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyCodeRequest.Size(m)
}
func (m *VerifyCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyCodeRequest proto.InternalMessageInfo

func (m *VerifyCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *VerifyCodeRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *VerifyCodeRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func init() {
	proto.RegisterType((*QRRequest)(nil), "tsv.QRRequest")
	proto.RegisterType((*Provider)(nil), "tsv.Provider")
	proto.RegisterType((*KeyRequest)(nil), "tsv.KeyRequest")
	proto.RegisterType((*KeyResponse)(nil), "tsv.KeyResponse")
	proto.RegisterType((*BindKeyRequest)(nil), "tsv.BindKeyRequest")
	proto.RegisterType((*TwoStepVerifyStauts)(nil), "tsv.TwoStepVerifyStauts")
	proto.RegisterType((*VerifyCodeRequest)(nil), "tsv.VerifyCodeRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TSVServiceClient is the client API for TSVService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TSVServiceClient interface {
	// service version
	VersionInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*global.VersionInfo, error)
	//
	// get provider from provider name
	//
	GetProvider(ctx context.Context, in *QRRequest, opts ...grpc.CallOption) (*Provider, error)
	//
	// when provider's key store is akey open platform, provider can generate and bind key , user and device.
	//
	GenerateKey(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*KeyResponse, error)
	//
	// bind key
	BindKey(ctx context.Context, in *BindKeyRequest, opts ...grpc.CallOption) (*TwoStepVerifyStauts, error)
	//
	// verify code, when code resource is akey open platform
	VerifyCode(ctx context.Context, in *VerifyCodeRequest, opts ...grpc.CallOption) (*TwoStepVerifyStauts, error)
}

type tSVServiceClient struct {
	cc *grpc.ClientConn
}

func NewTSVServiceClient(cc *grpc.ClientConn) TSVServiceClient {
	return &tSVServiceClient{cc}
}

func (c *tSVServiceClient) VersionInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*global.VersionInfo, error) {
	out := new(global.VersionInfo)
	err := c.cc.Invoke(ctx, "/tsv.TSVService/versionInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tSVServiceClient) GetProvider(ctx context.Context, in *QRRequest, opts ...grpc.CallOption) (*Provider, error) {
	out := new(Provider)
	err := c.cc.Invoke(ctx, "/tsv.TSVService/getProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tSVServiceClient) GenerateKey(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*KeyResponse, error) {
	out := new(KeyResponse)
	err := c.cc.Invoke(ctx, "/tsv.TSVService/generateKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tSVServiceClient) BindKey(ctx context.Context, in *BindKeyRequest, opts ...grpc.CallOption) (*TwoStepVerifyStauts, error) {
	out := new(TwoStepVerifyStauts)
	err := c.cc.Invoke(ctx, "/tsv.TSVService/bindKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tSVServiceClient) VerifyCode(ctx context.Context, in *VerifyCodeRequest, opts ...grpc.CallOption) (*TwoStepVerifyStauts, error) {
	out := new(TwoStepVerifyStauts)
	err := c.cc.Invoke(ctx, "/tsv.TSVService/verifyCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TSVServiceServer is the server API for TSVService service.
type TSVServiceServer interface {
	// service version
	VersionInfo(context.Context, *empty.Empty) (*global.VersionInfo, error)
	//
	// get provider from provider name
	//
	GetProvider(context.Context, *QRRequest) (*Provider, error)
	//
	// when provider's key store is akey open platform, provider can generate and bind key , user and device.
	//
	GenerateKey(context.Context, *KeyRequest) (*KeyResponse, error)
	//
	// bind key
	BindKey(context.Context, *BindKeyRequest) (*TwoStepVerifyStauts, error)
	//
	// verify code, when code resource is akey open platform
	VerifyCode(context.Context, *VerifyCodeRequest) (*TwoStepVerifyStauts, error)
}

func RegisterTSVServiceServer(s *grpc.Server, srv TSVServiceServer) {
	s.RegisterService(&_TSVService_serviceDesc, srv)
}

func _TSVService_VersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSVServiceServer).VersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv.TSVService/VersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSVServiceServer).VersionInfo(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TSVService_GetProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QRRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSVServiceServer).GetProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv.TSVService/GetProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSVServiceServer).GetProvider(ctx, req.(*QRRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TSVService_GenerateKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSVServiceServer).GenerateKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv.TSVService/GenerateKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSVServiceServer).GenerateKey(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TSVService_BindKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSVServiceServer).BindKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv.TSVService/BindKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSVServiceServer).BindKey(ctx, req.(*BindKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TSVService_VerifyCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TSVServiceServer).VerifyCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tsv.TSVService/VerifyCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TSVServiceServer).VerifyCode(ctx, req.(*VerifyCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TSVService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tsv.TSVService",
	HandlerType: (*TSVServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "versionInfo",
			Handler:    _TSVService_VersionInfo_Handler,
		},
		{
			MethodName: "getProvider",
			Handler:    _TSVService_GetProvider_Handler,
		},
		{
			MethodName: "generateKey",
			Handler:    _TSVService_GenerateKey_Handler,
		},
		{
			MethodName: "bindKey",
			Handler:    _TSVService_BindKey_Handler,
		},
		{
			MethodName: "verifyCode",
			Handler:    _TSVService_VerifyCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "tsv.proto",
}

func init() { proto.RegisterFile("tsv.proto", fileDescriptor_d8317bf0c59a0f59) }

var fileDescriptor_d8317bf0c59a0f59 = []byte{
	// 622 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcd, 0x6e, 0xdb, 0x38,
	0x10, 0xb6, 0x65, 0xc7, 0x3f, 0x93, 0x9f, 0xcd, 0x32, 0xbb, 0x59, 0xad, 0x82, 0xb4, 0x81, 0x72,
	0xc9, 0x25, 0x72, 0x91, 0xa2, 0x97, 0x9e, 0xea, 0x04, 0x3d, 0x04, 0x01, 0x0a, 0xd7, 0x4e, 0x7d,
	0x28, 0x0a, 0x18, 0x94, 0x35, 0x16, 0x84, 0x48, 0x22, 0x4d, 0xd2, 0x6e, 0xf5, 0x0e, 0x7d, 0x88,
	0xa2, 0x40, 0x9f, 0xa1, 0xaf, 0x57, 0x90, 0x94, 0x6c, 0x07, 0x49, 0x7a, 0xe8, 0x41, 0x80, 0xe6,
	0x9b, 0xf9, 0x38, 0xdf, 0x7c, 0xe4, 0x40, 0x57, 0xc9, 0x65, 0xc0, 0x05, 0x53, 0x8c, 0x34, 0x94,
	0x5c, 0x7a, 0x47, 0x31, 0x63, 0x71, 0x8a, 0x3d, 0x03, 0x85, 0x8b, 0x59, 0x0f, 0x33, 0xae, 0x0a,
	0x5b, 0xe1, 0xed, 0xc4, 0x29, 0x0b, 0x69, 0x6a, 0x23, 0xff, 0x05, 0x74, 0xdf, 0x0f, 0x87, 0x38,
	0x5f, 0xa0, 0x54, 0xe4, 0x14, 0x76, 0xb9, 0x60, 0xcb, 0x24, 0x42, 0x31, 0xc9, 0x69, 0x86, 0x6e,
	0xfd, 0xa4, 0x7e, 0xd6, 0x1d, 0xee, 0x54, 0xe0, 0x3b, 0x9a, 0xa1, 0xff, 0xad, 0x0e, 0x9d, 0x41,
	0x09, 0x90, 0x3d, 0x70, 0x92, 0xa8, 0x2c, 0x73, 0x92, 0x88, 0x10, 0x68, 0x1a, 0xa2, 0x63, 0x10,
	0xf3, 0x4f, 0x8e, 0x01, 0xe6, 0x62, 0xc2, 0xa9, 0x52, 0x28, 0x72, 0xb7, 0x61, 0x32, 0xdd, 0xb9,
	0x18, 0x58, 0x80, 0xfc, 0x0f, 0x9d, 0x94, 0xc5, 0x6c, 0xb2, 0x10, 0xa9, 0xdb, 0x34, 0xc9, 0xb6,
	0x8e, 0x3f, 0x88, 0x54, 0x33, 0x97, 0x28, 0x92, 0x59, 0x31, 0xa1, 0x3c, 0x71, 0xb7, 0x2c, 0xd3,
	0x22, 0x7d, 0x9e, 0x90, 0xff, 0xa0, 0x9d, 0xc8, 0x09, 0xbd, 0xc3, 0xc2, 0x6d, 0x9d, 0xd4, 0xcf,
	0x3a, 0xc3, 0x56, 0x22, 0xfb, 0x77, 0x58, 0xf8, 0x7d, 0x80, 0x1b, 0x2c, 0xaa, 0xa9, 0x8e, 0x01,
	0x24, 0x4a, 0x99, 0xb0, 0x7c, 0xb2, 0xd2, 0xda, 0x2d, 0x91, 0xeb, 0x88, 0xfc, 0x03, 0x5b, 0x29,
	0x0d, 0x31, 0x2d, 0x35, 0xdb, 0xc0, 0xff, 0x5a, 0x87, 0x6d, 0x73, 0x86, 0xe4, 0x2c, 0x97, 0x48,
	0xf6, 0xa1, 0xa1, 0xfb, 0x58, 0xb6, 0xfe, 0x7d, 0x68, 0x96, 0xf3, 0xd0, 0x2c, 0xf2, 0x2f, 0xb4,
	0xe6, 0xc2, 0x8c, 0x66, 0xe7, 0xde, 0x9a, 0x0b, 0x3d, 0xd8, 0xaa, 0x67, 0x73, 0xa3, 0xa7, 0x76,
	0x22, 0x4c, 0xf2, 0x68, 0x63, 0xd8, 0xb6, 0x8e, 0xfb, 0x3c, 0xf1, 0x7f, 0xd6, 0x61, 0xef, 0x32,
	0xc9, 0xa3, 0x8d, 0xb1, 0xfe, 0x50, 0xd1, 0x73, 0xd8, 0x2e, 0x3d, 0x9d, 0xb2, 0x08, 0x4b, 0x59,
	0xa5, 0xcd, 0x57, 0x2c, 0xc2, 0x27, 0xb4, 0x79, 0xd0, 0xe1, 0x29, 0x55, 0x33, 0x26, 0xb2, 0x52,
	0xdb, 0x2a, 0x26, 0x47, 0xd0, 0x8d, 0x70, 0x99, 0x4c, 0x51, 0xfb, 0xdb, 0xb2, 0x49, 0x0b, 0x5c,
	0x47, 0xfe, 0x15, 0x1c, 0xdc, 0x7e, 0x66, 0x23, 0x85, 0x7c, 0x6c, 0x7a, 0x8c, 0x14, 0x5d, 0x28,
	0xa9, 0x1f, 0x8a, 0xe9, 0x6f, 0xe5, 0x9b, 0x7f, 0xe2, 0x42, 0x3b, 0x43, 0x29, 0x69, 0x5c, 0x29,
	0xaf, 0x42, 0xff, 0x13, 0xfc, 0x3d, 0x5e, 0x29, 0xac, 0x0c, 0x78, 0xec, 0x88, 0xfb, 0x77, 0xed,
	0x3c, 0x79, 0xd7, 0x8d, 0x8d, 0xd9, 0x2e, 0x7e, 0x38, 0x00, 0xb7, 0xa3, 0xf1, 0x08, 0x85, 0xd6,
	0x4c, 0x5e, 0x19, 0x87, 0x0c, 0x23, 0x9f, 0x31, 0x72, 0x18, 0xd8, 0x6d, 0x0a, 0xaa, 0x6d, 0x0a,
	0xde, 0xea, 0x6d, 0xf2, 0x76, 0x82, 0xf1, 0xba, 0xca, 0xaf, 0x91, 0x00, 0xb6, 0x63, 0x54, 0xeb,
	0xcd, 0x08, 0xf4, 0x52, 0xae, 0x76, 0xcb, 0xdb, 0x35, 0x71, 0x95, 0xf6, 0x6b, 0xe4, 0x42, 0xd7,
	0xe7, 0x28, 0xa8, 0xc2, 0x1b, 0x2c, 0xc8, 0x5f, 0x26, 0xbf, 0xbe, 0x5f, 0x6f, 0x7f, 0x0d, 0xd8,
	0x37, 0xe8, 0xd7, 0xc8, 0x6b, 0x30, 0x2f, 0x42, 0xd7, 0x1f, 0x98, 0xf4, 0xfd, 0x37, 0xe1, 0xb9,
	0x06, 0x7c, 0xc4, 0x6f, 0xbf, 0x46, 0xde, 0xc0, 0xe6, 0x2d, 0x1f, 0x9a, 0xca, 0x07, 0xa6, 0xfe,
	0xee, 0x84, 0xcb, 0x10, 0x9e, 0x4d, 0x59, 0x16, 0xe8, 0x85, 0x0b, 0x18, 0xc7, 0x3c, 0x90, 0xd6,
	0xb1, 0x20, 0x16, 0x7c, 0xaa, 0x79, 0x97, 0xe4, 0x1e, 0x71, 0xa0, 0x0d, 0x1b, 0xd4, 0x3f, 0x9e,
	0x6a, 0xc6, 0x39, 0xe5, 0xfc, 0x3c, 0xa4, 0xf9, 0xdd, 0x39, 0x7e, 0xa1, 0x19, 0x4f, 0x51, 0xf6,
	0x34, 0xad, 0xa7, 0xe4, 0x52, 0x7f, 0xdf, 0x9d, 0x66, 0xff, 0x06, 0x8b, 0xb0, 0x65, 0x5c, 0x7e,
	0xf9, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xbf, 0x76, 0x44, 0x0c, 0xd3, 0x04, 0x00, 0x00,
}
