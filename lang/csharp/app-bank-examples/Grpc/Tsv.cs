// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tsv.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tsv {

  /// <summary>Holder for reflection information generated from tsv.proto</summary>
  public static partial class TsvReflection {

    #region Descriptor
    /// <summary>File descriptor for tsv.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TsvReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgl0c3YucHJvdG8SA3RzdhobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3Rv",
            "GgxnbG9iYWwucHJvdG8iIgoJUVJSZXF1ZXN0EhUKDXByb3ZpZGVyX25hbWUY",
            "ASABKAkibwoIUHJvdmlkZXISCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRIS",
            "Cgpxcl9wYXR0ZXJuGAMgASgJEhAKCGxvZ29fdXJsGAQgASgJEhIKCnZlcmlm",
            "eV9hcGkYBSABKAkSDwoHaXNfYWtleRgGIAEoCCIvCgpLZXlSZXF1ZXN0EhIK",
            "CnNlc3Npb25faWQYASABKAkSDQoFbGFiZWwYAiABKAkiYgoLS2V5UmVzcG9u",
            "c2USCwoDa2V5GAEgASgJEhUKDXByb3ZpZGVyX25hbWUYAiABKAkSDgoGcXJf",
            "dXJsGAMgASgJEg0KBWxhYmVsGAQgASgJEhAKCGJpbmRfYXBpGAUgASgJIn0K",
            "DkJpbmRLZXlSZXF1ZXN0EgsKA2tleRgBIAEoCRIVCg1wcm92aWRlcl9uYW1l",
            "GAIgASgJEhMKC3ZlcmlmeV9jb2RlGAMgASgJEg0KBWxhYmVsGAQgASgJEhAK",
            "CHBsYXRmb3JtGAUgASgJEhEKCWRldmljZV9pZBgGIAEoCSI0ChNUd29TdGVw",
            "VmVyaWZ5U3RhdXRzEgwKBGNvZGUYASABKAkSDwoHbWVzc2FnZRgCIAEoCSJE",
            "ChFWZXJpZnlDb2RlUmVxdWVzdBIMCgRjb2RlGAEgASgJEhIKCnNlc3Npb25f",
            "aWQYAiABKAkSDQoFbGFiZWwYAyABKAkypQIKClRTVlNlcnZpY2USNQoLdmVy",
            "c2lvbkluZm8SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaDC5WZXJzaW9uSW5m",
            "byIAEi4KC2dldFByb3ZpZGVyEg4udHN2LlFSUmVxdWVzdBoNLnRzdi5Qcm92",
            "aWRlciIAEjIKC2dlbmVyYXRlS2V5Eg8udHN2LktleVJlcXVlc3QaEC50c3Yu",
            "S2V5UmVzcG9uc2UiABI6CgdiaW5kS2V5EhMudHN2LkJpbmRLZXlSZXF1ZXN0",
            "GhgudHN2LlR3b1N0ZXBWZXJpZnlTdGF1dHMiABJACgp2ZXJpZnlDb2RlEhYu",
            "dHN2LlZlcmlmeUNvZGVSZXF1ZXN0GhgudHN2LlR3b1N0ZXBWZXJpZnlTdGF1",
            "dHMiAEJiCh5jb20uYWtleS5vcGVuLnNlcnZpY2UuZ3JwYy50c3ZCElR3b1N0",
            "ZXBWZXJpZnlQcm90b1ABWiNha2V5LWFwcC1iYW5rLWV4YW1wbGVzL2dycGMv",
            "dHN2L3RzdqICBEFLZXliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::GlobalReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.QRRequest), global::Tsv.QRRequest.Parser, new[]{ "ProviderName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.Provider), global::Tsv.Provider.Parser, new[]{ "Id", "Name", "QrPattern", "LogoUrl", "VerifyApi", "IsAkey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.KeyRequest), global::Tsv.KeyRequest.Parser, new[]{ "SessionId", "Label" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.KeyResponse), global::Tsv.KeyResponse.Parser, new[]{ "Key", "ProviderName", "QrUrl", "Label", "BindApi" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.BindKeyRequest), global::Tsv.BindKeyRequest.Parser, new[]{ "Key", "ProviderName", "VerifyCode", "Label", "Platform", "DeviceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.TwoStepVerifyStauts), global::Tsv.TwoStepVerifyStauts.Parser, new[]{ "Code", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tsv.VerifyCodeRequest), global::Tsv.VerifyCodeRequest.Parser, new[]{ "Code", "SessionId", "Label" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QRRequest : pb::IMessage<QRRequest> {
    private static readonly pb::MessageParser<QRRequest> _parser = new pb::MessageParser<QRRequest>(() => new QRRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QRRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QRRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QRRequest(QRRequest other) : this() {
      providerName_ = other.providerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QRRequest Clone() {
      return new QRRequest(this);
    }

    /// <summary>Field number for the "provider_name" field.</summary>
    public const int ProviderNameFieldNumber = 1;
    private string providerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QRRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QRRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProviderName != other.ProviderName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProviderName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProviderName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QRRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProviderName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Provider : pb::IMessage<Provider> {
    private static readonly pb::MessageParser<Provider> _parser = new pb::MessageParser<Provider>(() => new Provider());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Provider> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Provider() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Provider(Provider other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      qrPattern_ = other.qrPattern_;
      logoUrl_ = other.logoUrl_;
      verifyApi_ = other.verifyApi_;
      isAkey_ = other.isAkey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Provider Clone() {
      return new Provider(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qr_pattern" field.</summary>
    public const int QrPatternFieldNumber = 3;
    private string qrPattern_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QrPattern {
      get { return qrPattern_; }
      set {
        qrPattern_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logo_url" field.</summary>
    public const int LogoUrlFieldNumber = 4;
    private string logoUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogoUrl {
      get { return logoUrl_; }
      set {
        logoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verify_api" field.</summary>
    public const int VerifyApiFieldNumber = 5;
    private string verifyApi_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerifyApi {
      get { return verifyApi_; }
      set {
        verifyApi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_akey" field.</summary>
    public const int IsAkeyFieldNumber = 6;
    private bool isAkey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAkey {
      get { return isAkey_; }
      set {
        isAkey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Provider);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Provider other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (QrPattern != other.QrPattern) return false;
      if (LogoUrl != other.LogoUrl) return false;
      if (VerifyApi != other.VerifyApi) return false;
      if (IsAkey != other.IsAkey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (QrPattern.Length != 0) hash ^= QrPattern.GetHashCode();
      if (LogoUrl.Length != 0) hash ^= LogoUrl.GetHashCode();
      if (VerifyApi.Length != 0) hash ^= VerifyApi.GetHashCode();
      if (IsAkey != false) hash ^= IsAkey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (QrPattern.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QrPattern);
      }
      if (LogoUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LogoUrl);
      }
      if (VerifyApi.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(VerifyApi);
      }
      if (IsAkey != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsAkey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (QrPattern.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QrPattern);
      }
      if (LogoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogoUrl);
      }
      if (VerifyApi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyApi);
      }
      if (IsAkey != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Provider other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.QrPattern.Length != 0) {
        QrPattern = other.QrPattern;
      }
      if (other.LogoUrl.Length != 0) {
        LogoUrl = other.LogoUrl;
      }
      if (other.VerifyApi.Length != 0) {
        VerifyApi = other.VerifyApi;
      }
      if (other.IsAkey != false) {
        IsAkey = other.IsAkey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            QrPattern = input.ReadString();
            break;
          }
          case 34: {
            LogoUrl = input.ReadString();
            break;
          }
          case 42: {
            VerifyApi = input.ReadString();
            break;
          }
          case 48: {
            IsAkey = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyRequest : pb::IMessage<KeyRequest> {
    private static readonly pb::MessageParser<KeyRequest> _parser = new pb::MessageParser<KeyRequest>(() => new KeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyRequest(KeyRequest other) : this() {
      sessionId_ = other.sessionId_;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyRequest Clone() {
      return new KeyRequest(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 2;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeyResponse : pb::IMessage<KeyResponse> {
    private static readonly pb::MessageParser<KeyResponse> _parser = new pb::MessageParser<KeyResponse>(() => new KeyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyResponse(KeyResponse other) : this() {
      key_ = other.key_;
      providerName_ = other.providerName_;
      qrUrl_ = other.qrUrl_;
      label_ = other.label_;
      bindApi_ = other.bindApi_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyResponse Clone() {
      return new KeyResponse(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider_name" field.</summary>
    public const int ProviderNameFieldNumber = 2;
    private string providerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qr_url" field.</summary>
    public const int QrUrlFieldNumber = 3;
    private string qrUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QrUrl {
      get { return qrUrl_; }
      set {
        qrUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 4;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bind_api" field.</summary>
    public const int BindApiFieldNumber = 5;
    private string bindApi_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BindApi {
      get { return bindApi_; }
      set {
        bindApi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (ProviderName != other.ProviderName) return false;
      if (QrUrl != other.QrUrl) return false;
      if (Label != other.Label) return false;
      if (BindApi != other.BindApi) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      if (QrUrl.Length != 0) hash ^= QrUrl.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (BindApi.Length != 0) hash ^= BindApi.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (ProviderName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProviderName);
      }
      if (QrUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(QrUrl);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Label);
      }
      if (BindApi.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BindApi);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (QrUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QrUrl);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (BindApi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BindApi);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      if (other.QrUrl.Length != 0) {
        QrUrl = other.QrUrl;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.BindApi.Length != 0) {
        BindApi = other.BindApi;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            ProviderName = input.ReadString();
            break;
          }
          case 26: {
            QrUrl = input.ReadString();
            break;
          }
          case 34: {
            Label = input.ReadString();
            break;
          }
          case 42: {
            BindApi = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BindKeyRequest : pb::IMessage<BindKeyRequest> {
    private static readonly pb::MessageParser<BindKeyRequest> _parser = new pb::MessageParser<BindKeyRequest>(() => new BindKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BindKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindKeyRequest(BindKeyRequest other) : this() {
      key_ = other.key_;
      providerName_ = other.providerName_;
      verifyCode_ = other.verifyCode_;
      label_ = other.label_;
      platform_ = other.platform_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindKeyRequest Clone() {
      return new BindKeyRequest(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider_name" field.</summary>
    public const int ProviderNameFieldNumber = 2;
    private string providerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "verify_code" field.</summary>
    public const int VerifyCodeFieldNumber = 3;
    private string verifyCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VerifyCode {
      get { return verifyCode_; }
      set {
        verifyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 4;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 5;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 6;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BindKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BindKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (ProviderName != other.ProviderName) return false;
      if (VerifyCode != other.VerifyCode) return false;
      if (Label != other.Label) return false;
      if (Platform != other.Platform) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      if (VerifyCode.Length != 0) hash ^= VerifyCode.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (ProviderName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProviderName);
      }
      if (VerifyCode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VerifyCode);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Label);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Platform);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (VerifyCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VerifyCode);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BindKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      if (other.VerifyCode.Length != 0) {
        VerifyCode = other.VerifyCode;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            ProviderName = input.ReadString();
            break;
          }
          case 26: {
            VerifyCode = input.ReadString();
            break;
          }
          case 34: {
            Label = input.ReadString();
            break;
          }
          case 42: {
            Platform = input.ReadString();
            break;
          }
          case 50: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TwoStepVerifyStauts : pb::IMessage<TwoStepVerifyStauts> {
    private static readonly pb::MessageParser<TwoStepVerifyStauts> _parser = new pb::MessageParser<TwoStepVerifyStauts>(() => new TwoStepVerifyStauts());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TwoStepVerifyStauts> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoStepVerifyStauts() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoStepVerifyStauts(TwoStepVerifyStauts other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TwoStepVerifyStauts Clone() {
      return new TwoStepVerifyStauts(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TwoStepVerifyStauts);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TwoStepVerifyStauts other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TwoStepVerifyStauts other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VerifyCodeRequest : pb::IMessage<VerifyCodeRequest> {
    private static readonly pb::MessageParser<VerifyCodeRequest> _parser = new pb::MessageParser<VerifyCodeRequest>(() => new VerifyCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerifyCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tsv.TsvReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyCodeRequest(VerifyCodeRequest other) : this() {
      code_ = other.code_;
      sessionId_ = other.sessionId_;
      label_ = other.label_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerifyCodeRequest Clone() {
      return new VerifyCodeRequest(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 3;
    private string label_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Label {
      get { return label_; }
      set {
        label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerifyCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerifyCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (SessionId != other.SessionId) return false;
      if (Label != other.Label) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (Label.Length != 0) hash ^= Label.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (Label.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (Label.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerifyCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.Label.Length != 0) {
        Label = other.Label;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            Label = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
